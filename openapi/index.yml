openapi: 3.0.0
info:
  title: Sample API
  description: 'Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.'
  version: 0.0.1
  contact:
    name: mitsuru793
servers:
  - url: 'http://api.myapp.net/v1'
    description: 'Optional server description, e.g. Main (production) server'
  - url: 'http://staging-api.myapp.net'
    description: 'Optional server description, e.g. Internal staging server for testing'
paths:
  /users:
    get:
      summary: List users
      description: List users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/User.v1.yaml
      operationId: list-users
      tags:
        - users
    post:
      summary: Create user
      operationId: create-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/User.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/User.v1.yaml
        description: ''
      description: Create user
      tags:
        - users
    parameters: []
  '/users/{userId}':
    get:
      summary: Show user by id
      tags:
        - users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/User.v1.yaml
      operationId: show-user-by-id
      description: Show user by id
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: ''
    put:
      summary: Update user by id
      operationId: update-user-by-id
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/User.v1.yaml
      description: Update user by id
      tags:
        - users
    delete:
      summary: Delete user by id
      operationId: delete-user-by-id
      responses:
        '200':
          description: OK
      description: Delete user by id
      tags:
        - users
  /posts:
    get:
      summary: List posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Post.v1.yaml
      operationId: list-posts
      description: List posts
      tags:
        - posts
    post:
      summary: Create post by id
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Post.v1.yaml
      operationId: create-post-by-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Post.v1.yaml
      description: Create post by id
  '/posts/{postId}':
    parameters:
      - schema:
          type: string
        name: postId
        in: path
        required: true
    get:
      summary: Show post
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Post.v1.yaml
      operationId: show-post-by-id
      description: Show post
    put:
      summary: Update post by id
      tags:
        - posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Post.v1.yaml
      operationId: update-post-by-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Post.v1.yaml
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      description: Update post by id
    delete:
      summary: Delete post by id
      tags:
        - posts
      responses:
        '200':
          description: OK
      operationId: delete-post-by-id
      description: Delete post by id
components:
  schemas: {}
tags:
  - name: posts
  - name: users
