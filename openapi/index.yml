openapi: 3.0.0
info:
  title: Sample API
  description: 'Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.'
  version: 0.0.1
servers:
  - url: 'http://api.myapp.net/v1'
    description: 'Optional server description, e.g. Main (production) server'
  - url: 'http://staging-api.myapp.net'
    description: 'Optional server description, e.g. Internal staging server for testing'
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: get-users
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: ''
    parameters: []
  '/users/{userId}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-users-userId
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: ''
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        password:
          type: string
      required:
        - name
    Post:
      title: Post
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        title:
          type: string
        content:
          type: string
        viewableUsers:
          type: array
          items:
            $ref: '#/components/schemas/User'
        year:
          type: integer
          format: int32
          multipleOf: 0
      required:
        - author
        - title
        - content
        - viewableUsers
        - year
      x-examples: {}
    Tag:
      title: Tag
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - name
