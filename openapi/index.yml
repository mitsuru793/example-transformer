openapi: 3.0.0
info:
  title: Sample API
  description: 'Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.'
  version: 0.0.1
servers:
  - url: 'http://api.myapp.net/v1'
    description: 'Optional server description, e.g. Main (production) server'
  - url: 'http://staging-api.myapp.net'
    description: 'Optional server description, e.g. Internal staging server for testing'
paths:
  /users:
    get:
      summary: Returns a list of users.
      description: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/User.v1.yaml
      operationId: get-users
    post:
      summary: ''
      operationId: post-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/User.v1.yaml
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/User.v1.yaml
        description: ''
    parameters: []
  '/users/{userId}':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/User.v1.yaml
      operationId: get-users-userId
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: ''
    put:
      summary: ''
      operationId: put-users-userId
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/User.v1.yaml
    delete:
      summary: ''
      operationId: delete-users-userId
      responses:
        '200':
          description: OK
  /posts:
    get:
      summary: list-posts
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ./models/Post.v1.yaml
      operationId: get-posts
    post:
      summary: create-posts
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Post.v1.yaml
      operationId: post-posts
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Post.v1.yaml
  '/posts/{postId}':
    parameters:
      - schema:
          type: string
        name: postId
        in: path
        required: true
    get:
      summary: show-post
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Post.v1.yaml
      operationId: get-posts-postId
    put:
      summary: update-post
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./models/Post.v1.yaml
      operationId: put-posts-postId
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./models/Post.v1.yaml
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
    delete:
      summary: delete-post
      tags: []
      responses:
        '200':
          description: OK
      operationId: delete-posts-postId
components:
  schemas: {}
